/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GenerateCompletionForm {
    #[serde(rename = "model")]
    pub model: String,
    #[serde(rename = "prompt")]
    pub prompt: String,
    #[serde(rename = "images", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub images: Option<Option<Vec<String>>>,
    #[serde(rename = "format", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub format: Option<Option<String>>,
    #[serde(rename = "options", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub options: Option<Option<serde_json::Value>>,
    #[serde(rename = "system", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub system: Option<Option<String>>,
    #[serde(rename = "template", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub template: Option<Option<String>>,
    #[serde(rename = "context", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub context: Option<Option<String>>,
    #[serde(rename = "stream", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub stream: Option<Option<bool>>,
    #[serde(rename = "raw", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub raw: Option<Option<bool>>,
    #[serde(rename = "keep_alive", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub keep_alive: Option<Option<Box<models::KeepAlive>>>,
}

impl GenerateCompletionForm {
    pub fn new(model: String, prompt: String) -> GenerateCompletionForm {
        GenerateCompletionForm {
            model,
            prompt,
            images: None,
            format: None,
            options: None,
            system: None,
            template: None,
            context: None,
            stream: None,
            raw: None,
            keep_alive: None,
        }
    }
}

