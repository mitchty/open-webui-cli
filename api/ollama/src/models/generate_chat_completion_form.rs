/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GenerateChatCompletionForm {
    #[serde(rename = "model")]
    pub model: String,
    #[serde(rename = "messages")]
    pub messages: Vec<models::ChatMessage>,
    #[serde(
        rename = "format",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub format: Option<Option<String>>,
    #[serde(
        rename = "options",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub options: Option<Option<serde_json::Value>>,
    #[serde(
        rename = "template",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub template: Option<Option<String>>,
    #[serde(
        rename = "stream",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub stream: Option<Option<bool>>,
    #[serde(
        rename = "keep_alive",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub keep_alive: Option<Option<Box<models::KeepAlive>>>,
}

impl GenerateChatCompletionForm {
    pub fn new(model: String, messages: Vec<models::ChatMessage>) -> GenerateChatCompletionForm {
        GenerateChatCompletionForm {
            model,
            messages,
            format: None,
            options: None,
            template: None,
            stream: None,
            keep_alive: None,
        }
    }
}
