/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatResponse {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "user_id")]
    pub user_id: String,
    #[serde(rename = "title")]
    pub title: String,
    #[serde(rename = "chat")]
    pub chat: serde_json::Value,
    #[serde(rename = "updated_at")]
    pub updated_at: i32,
    #[serde(rename = "created_at")]
    pub created_at: i32,
    #[serde(
        rename = "share_id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub share_id: Option<Option<String>>,
    #[serde(rename = "archived")]
    pub archived: bool,
    #[serde(
        rename = "pinned",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub pinned: Option<Option<bool>>,
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<serde_json::Value>,
    #[serde(
        rename = "folder_id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub folder_id: Option<Option<String>>,
}

impl ChatResponse {
    pub fn new(
        id: String,
        user_id: String,
        title: String,
        chat: serde_json::Value,
        updated_at: i32,
        created_at: i32,
        archived: bool,
    ) -> ChatResponse {
        ChatResponse {
            id,
            user_id,
            title,
            chat,
            updated_at,
            created_at,
            share_id: None,
            archived,
            pinned: None,
            meta: None,
            folder_id: None,
        }
    }
}
