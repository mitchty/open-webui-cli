/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FeedbackForm {
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Box<models::FeedbackFormData>>,
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<Box<models::Meta>>,
    #[serde(rename = "snapshot", skip_serializing_if = "Option::is_none")]
    pub snapshot: Option<Box<models::FeedbackFormSnapshot>>,
}

impl FeedbackForm {
    pub fn new(r#type: String) -> FeedbackForm {
        FeedbackForm {
            r#type,
            data: None,
            meta: None,
            snapshot: None,
        }
    }
}
