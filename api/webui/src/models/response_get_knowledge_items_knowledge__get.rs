/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResponseGetKnowledgeItemsKnowledgeGet {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<serde_json::Value>,
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<serde_json::Value>,
    #[serde(rename = "created_at")]
    pub created_at: i32,
    #[serde(rename = "updated_at")]
    pub updated_at: i32,
}

impl ResponseGetKnowledgeItemsKnowledgeGet {
    pub fn new(
        id: String,
        name: String,
        description: String,
        created_at: i32,
        updated_at: i32,
    ) -> ResponseGetKnowledgeItemsKnowledgeGet {
        ResponseGetKnowledgeItemsKnowledgeGet {
            id,
            name,
            description,
            data: None,
            meta: None,
            created_at,
            updated_at,
        }
    }
}
