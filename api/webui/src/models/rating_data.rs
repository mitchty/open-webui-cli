/*
 * FastAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RatingData {
    #[serde(rename = "rating", skip_serializing_if = "Option::is_none")]
    pub rating: Option<Box<models::Rating>>,
    #[serde(rename = "model_id", skip_serializing_if = "Option::is_none")]
    pub model_id: Option<Box<models::ModelId>>,
    #[serde(rename = "sibling_model_ids", skip_serializing_if = "Option::is_none")]
    pub sibling_model_ids: Option<Box<models::SiblingModelIds>>,
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<Box<models::Reason>>,
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<Box<models::Comment>>,
}

impl RatingData {
    pub fn new() -> RatingData {
        RatingData {
            rating: None,
            model_id: None,
            sibling_model_ids: None,
            reason: None,
            comment: None,
        }
    }
}
